"**********************************************************
"     ステータスライン StatusLine
"**********************************************************
" 常にステータスライン表示
set laststatus=2
" ステータスライン表示設定
function! GetEFstatus()
	let str = ''
	let fenc = ''
	if &fileformat == 'unix'
		let str = '[uni]'
	else
		let str = '[' . &fileformat . ']'
	endif
	if &fileencoding != ''
		if &fileencoding =~# 'iso-2022-jp'
			let fenc = 'J'
		elseif &fileencoding == 'utf-8'
			let fenc = 'U'
		elseif &fileencoding == 'cp932'
			let fenc = 'S'
		elseif &fileencoding =~# 'euc-jp'
			let fenc = 'E'
		else
			let fenc = &fileencoding
		endif
		let str = str . '[' . fenc . ']'
	else
		let str = str . '[-]'
	endif
	unlet fenc
	return str
endfunction
"set statusline=\ %-f%-5(\ %r%m\ %)%=%{GetEFstatus()}\ %(%4c,\ %4l/%4L\ %)
" ステータスライン色設定
"highlight StatusLine ctermfg=white ctermbg=red

" Powerline設定
let g:Powerline_symbols='fancy'
set t_Co=256
set encoding=utf-8

" コマンドをステータスラインに表示
set showcmd

"自動的に QuickFix リストを表示する
autocmd QuickfixCmdPost make,grep,grepadd,vimgrep,vimgrepadd cwin
autocmd QuickfixCmdPost lmake,lgrep,lgrepadd,lvimgrep,lvimgrepadd lwin

