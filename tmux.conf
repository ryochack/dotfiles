##### Prefix key #####
unbind-key C-b
set-option -g prefix C-g
bind-key C-g send-prefix


##### Platform dependent ####
set-option -g default-terminal xterm-256color


##### View #####
set-option -g status on
set-option -g status-right "#[default] #h | %y-%m-%d %H:%M | #(sh $HOME/.dotfiles/battery.sh) #[default]"
#set-option -g status-bg green
#set-option -g status-fg white
#set-window-option -g mode-bg green
#set-window-option -g mode-fg white
#set-window-option -g window-status-bg green
#set-window-option -g window-status-fg white
#set-window-option -g window-current-status-bg green
#set-window-option -g window-current-status-fg white


##### Option #####
set-option -g base-index 1
set-window-option -g mode-keys vi
set-option -g display-panes-time 1500
set-option -g history-limit 10000


##### Mouse #####
# set-option -g mouse-resize-pane on
# set-option -g mouse-select-pane on
# set-option -g mouse-select-window on
# set-option -g mouse-utf8 on
# set-window-option -g mode-mouse on


##### Keybind #####
#=== Prompt ===
unbind \;
bind \; command-prompt

#=== Window ===
#-- Create window --
unbind w
bind w new-window

#-- Kill window --
unbind &
bind q confirm-before -p "kill-window #W (y/n)" kill-window

#=== Pane ===
#-- Split window --
unbind s
bind s split-window -v
unbind v
bind v split-window -h

#-- Kill pane --
unbind c
bind c confirm-before -p "kill-pane #P (y/n)" kill-pane

#-- Select pane --
unbind k
bind -r k select-pane -U
unbind j
bind -r j select-pane -D
unbind h
bind -r h select-pane -L
unbind l
bind -r l select-pane -R
unbind o
bind o last-window
unbind V
bind V display-panes

#-- Resize pane --
unbind C-k
bind -r C-k resize-pane -U
unbind C-j
bind -r C-j resize-pane -D
unbind C-h
bind -r C-h resize-pane -L
unbind C-l
bind -r C-l resize-pane -R

#-- Move pane --
unbind J
bind -r J rotate-window -D
unbind K
bind -r K rotate-window -U
unbind S
bind S command-prompt -p "swap-pane src:","swap-pane dst:" "swap-pane -s %1 -t %2"

# prefix [ : copy-mode
#   v      : select start
#   y      : copy
# prefix ] : paste

# Clipboard Setting
bind -T copy-mode-vi v send -X begin-selection
#bind -T copy-mode-vi y copy-pipe "xsel -bi"
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi y send -X copy-pipe "xsel -i -p && xsel -o -p | xsel -i -b"
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind ] run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# set-option -g default-command "reattach-to-user-namespace -l zsh"
# bind C-c run-shell 'reattach-to-user-namespace tmux-pbcopy'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-logging        \
'
# prefix C-s: save
# prefix C-r: restore
# prefix P  : toggle logging

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# tmux-logging option
set -g @logging-path "$HOME/.log/tmux"
set -g @logging-filename "tmux-%Y%m%d-%H%M%S-#{session_name}-#{window_index}-#{pane_index}.log"

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

